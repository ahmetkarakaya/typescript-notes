Typescript

#
https://itnext.io/server-side-typescript-with-node-c5cef1584684?gi=ea07bbbbc34f

#video from the beginning for newbie
https://www.youtube.com/watch?v=BwuLxPH8IDs&ab_channel=Academind


# Compile ts to javascript
tsc Helloworls.ts

#nodejs runs js code

node Helloworls.js


#visual code, extentions
- Integrates ESLint into VS Code. If you are new to ESLint check the documentation.
- Material Design Icons for Visual Studio Code
- Visual Studio Code plugin that autocompletes filenames
- Prettier Formatter for Visual Studio Code


#tutorial
https://www.tutorialspoint.com/typescript/typescript_basic_syntax.htm


#typescript
https://www.educative.io/answers/how-to-execute-the-typescript-file-using-the-command-line


#ESLint
https://eslint.org/
ESLint is an open source project that helps you find and fix problems with your JavaScript code. It doesn't matter if you're writing JavaScript in the browser ...

#prettier
https://prettier.io/
An opinionated code formatter.

------- -----

I just wanted to note your interview will be specific to TypeScript. Your Coding Interview has been scheduled for Tuesday, June 18 at 1pm ET with Mark McGranaghan. Prior to your interview, we recommend setting up our out-of-the-box repo for TypeScript, which will give you an environment that's ready to 

go with Jest, TS, eslint, and prettier. Make sure you have Node.js installed.

https://github.com/stainless-api/typescript-interview


#create typescript project
tsc --init

#compile
ts-node index.ts

tsconfig.json
	target -> es versions (20162,2017,,,,2023,es3,es5,es6,esnext)


#types
#readonly
type ReadOnlyEmployee = Readonly<Employee> 

#Record
type PositionsSalaries = Record<Positions, { salary: number }>


let ps: PositionsSalaries = {
    Programmer: { salary: 0 },
    Manager: { salary: 0 },
    HR: { salary: 0 },
    'Scrum Master': { salary: 0 },
};



#event loop
https://www.youtube.com/watch?v=cCOL7MC4Pl0



https://www.udemy.com/course/ai-nodejs-openai-chatgpt-langchain-typescript/


GitHub Copilot - The Complete Guide:

https://www.udemy.com/course/github-copilot-the-complete-guide/?couponCode=JUL2024


Unit Testing for Typescript & NodeJs Developers with Jest:

https://www.udemy.com/course/unit-testing-typescript-nodejs/?couponCode=JUL2024


Typescript 5 for developers:

https://www.udemy.com/course/typescript-full-stack-programming/?couponCode=JUL2024



Mastering Visual Studio Code:

https://www.udemy.com/course/mastering-visual-studio-code/?couponCode=JUL2024



NPM - Node package manager - Quickstart and Advanced - FREE

https://www.udemy.com/course/npm-node-package-manager-course/


Generative AI for Nodejs: OpenAI, LangChain- Typescipt


#all tutorial
https://www.typescriptlang.org/docs/handbook/2/everyday-types.html


#typescript support table
https://compat-table.github.io/compat-table/es6/


next-gejavascript means EC6+

#tutorial quick
https://www.tutorialspoint.com/typescript/typescript_array_splice.htm

#record
https://www.typescriptlang.org/docs/handbook/utility-types.html

#github
https://github.com/mschwarzmueller/understanding-typescript-resources/blob/main/attachments/09-classes-generics-practice/linked-list.ts


#drag drop event
https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API


#Module Name Features
1- NameSpace and File Bundeling (Typescript Feature)
2- ES Modules (new Java Script feature)
https://medium.com/computed-comparisons/commonjs-vs-amd-vs-requirejs-vs-es6-modules-2e814b114a0b


#declare
https://job.js.org/questions/typescript/ts-declare/


#build tools
webpack vs esbuild vs vite 
Official Webpack Docs: https://webpack.js.org/


#dts file
1) Ship your library code in .ts files (i.e., do not compile it to JavaScript)

2) Ship your library code in .js files (i.e., compiled or natively written in JavaScript) AND also ship .d.ts files to provide a "bridge" from JS to TS

3) Ship your library code in .js files (i.e., compiled or natively written in JavaScript) AND rely on other people to create .d.ts files that are installable via @types/<your-library> (or share those .d.ts files in that repository yourself)


#zod
https://zod.dev/
Zod is a TypeScript-first schema declaration and validation library. I'm using the term "schema" to broadly refer to any data type, from a simple string to a complex nested object.

#Google Map
Google Maps Pricing: https://cloud.google.com/maps-platform/pricing/sheet/

Google Geocoding API: https://developers.google.com/maps/documentation/geocoding/start

Google Maps JS SDK: https://developers.google.com/maps/documentation/javascript/tutorial


#react
npm create vite@latest react-ts


#Running TypeScript code with Node.js
https://nodejs.org/en/learn/typescript/run-natively

#npx
npx stands for Node Package eXecute.
>npx ts-node-dev src/main.ts 

#nest cli install
nest new messages
nest generate module messages
npm install -g @nestjs/cli


Visual Studio Extention
Rest Client


#Class Validator
https://github.com/typestack/class-validator
https://github.com/typestack/class-transformer


#all tutorial
https://www.typescriptlang.org/docs/handbook/2/everyday-types.html


#typescript support table
https://compat-table.github.io/compat-table/es6/


next-gejavascript means EC6+

#
https://jsonplaceholder.typicode.com/

#
https://www.typescriptlang.org/play

#fake data generator
https://github.com/faker-js/faker#typescript-support
